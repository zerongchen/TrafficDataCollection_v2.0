<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
								        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
								    	version="3.0">
    <display-name>TrafficDataCollection Web Application</display-name>
  
	<!-- 参数配置 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>TrafficDataCollection-0.0.1-SNAPSHOT</param-value>
	</context-param>
	
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>3000</param-value>
	</context-param>
	
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>WEB-INF/classes/config/log4j.properties</param-value>
	</context-param>

	<context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>classpath:spring/applicationContext.xml,classpath:spring/spring-quartz.xml</param-value>
	</context-param>
	
	<!-- Spring容器的监听器配置  -->
	<listener>
		<display-name>SpringListenner</display-name>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
			
	<!-- Spring request上下文-->
	<listener>    
	        <listener-class>    
	            org.springframework.web.context.request.RequestContextListener    
	        </listener-class>    
	</listener>
	
	<!-- log4j的监听器配置 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>
      		org.springframework.security.web.session.HttpSessionEventPublisher
		</listener-class>
	</listener>

	<filter>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
 
 	<!-- 字符编码的配置 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<servlet-name>SpringDispatcherServlet</servlet-name>
	</filter-mapping>
	 	
 	<!-- 配置spring核心servlet Spring MVC的配置 -->
	<servlet>
		<servlet-name>SpringDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/applicationContext-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>SpringDispatcherServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
 
	<!-- 验证码 -->
	<servlet>
    	<servlet-name>verificationCode</servlet-name>
    	<servlet-class>com.aotain.common.util.VerificationCode</servlet-class>
  	 </servlet>	
  	 
  	<servlet-mapping>
    	<servlet-name>verificationCode</servlet-name>
    	<url-pattern>/common/image</url-pattern>
  	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>


	<!-- 加载Spring容器配置 -->
	<!--<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	&lt;!&ndash; 设置Spring容器加载配置文件路径 &ndash;&gt;
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:applicationContext-server.xml</param-value>
	</context-param>-->

	<!--<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>-->

	<servlet>
		<servlet-name>CXFService</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>CXFService</servlet-name>
		<url-pattern>/WebService/*</url-pattern>
	</servlet-mapping>
</web-app>
